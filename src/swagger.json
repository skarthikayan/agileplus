{
  "openapi": "3.0.0",
  "info": {
    "title": "AgilePlus",
    "description": "A web application for intuitive and simple project management. It helps to plan, track and manages a team's workflow effectively.",
    "version": "1.0.0",
    "contact": { "email": "skarthikayan7@gmail.com" }
  },
  "servers": [{ "url": "http://localhost:3000/api/v1" }],
  "paths": {
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "List all Users",
        "responses": {
          "200": { "$ref": "#/components/responses/userList" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create new user",
        "responses": {
          "200": { "$ref": "#/components/responses/userDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "requestBody": {
          "description": "Create a new user",
          "$ref": "#/components/requestBodies/userDetails",
          "required": true
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Show user Details",
        "responses": {
          "200": { "$ref": "#/components/responses/userDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ]
      },
      "patch": {
        "tags": ["User"],
        "summary": "Edit User Details",
        "responses": {
          "200": { "$ref": "#/components/responses/userDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "description": "Create a new user",
          "$ref": "#/components/requestBodies/userDetails",
          "required": true
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete User Details",
        "responses": {
          "200": { "$ref": "#/components/responses/userDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delte",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ]
      }
    },
    "/sprints": {
      "get": {
        "tags": ["Sprint"],
        "summary": "List all Sprints",
        "responses": {
          "200": { "$ref": "#/components/responses/sprintList" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        }
      },
      "post": {
        "tags": ["Sprint"],
        "summary": "Create new sprint",
        "responses": {
          "200": { "$ref": "#/components/responses/sprintDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "requestBody": {
          "description": "Create a new sprint",
          "$ref": "#/components/requestBodies/sprintDetails",
          "required": true
        }
      }
    },
    "/sprints/{id}": {
      "get": {
        "tags": ["Sprint"],
        "summary": "Show sprint Details",
        "responses": {
          "200": { "$ref": "#/components/responses/sprintDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of sprint to return",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ]
      },
      "patch": {
        "tags": ["Sprint"],
        "summary": "Edit Sprint Details",
        "responses": {
          "200": { "$ref": "#/components/responses/sprintDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of sprint to return",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "description": "Create a new sprint",
          "$ref": "#/components/requestBodies/sprintDetails",
          "required": true
        }
      },
      "delete": {
        "tags": ["Sprint"],
        "summary": "Delete Sprint Details",
        "responses": {
          "200": { "$ref": "#/components/responses/sprintDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of sprint to delte",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ]
      }
    },
    "/backlogs": {
      "get": {
        "tags": ["Backlog"],
        "summary": "List all Backlogs",
        "responses": {
          "200": { "$ref": "#/components/responses/backlogList" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        }
      },
      "post": {
        "tags": ["Backlog"],
        "summary": "Create new backlog",
        "responses": {
          "200": { "$ref": "#/components/responses/backlogDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "requestBody": {
          "description": "Create a new backlog",
          "$ref": "#/components/requestBodies/backlogDetails",
          "required": true
        }
      }
    },
    "/backlogs/{id}": {
      "get": {
        "tags": ["Backlog"],
        "summary": "Show backlog Details",
        "responses": {
          "200": { "$ref": "#/components/responses/backlogDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of backlog to return",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ]
      },
      "patch": {
        "tags": ["Backlog"],
        "summary": "Edit Backlog Details",
        "responses": {
          "200": { "$ref": "#/components/responses/backlogDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of backlog to return",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "description": "Create a new backlog",
          "$ref": "#/components/requestBodies/backlogDetails",
          "required": true
        }
      },
      "delete": {
        "tags": ["Backlog"],
        "summary": "Delete Backlog Details",
        "responses": {
          "200": { "$ref": "#/components/responses/backlogDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of backlog to delte",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ]
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Task"],
        "summary": "List all Tasks",
        "responses": {
          "200": { "$ref": "#/components/responses/taskList" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        }
      },
      "post": {
        "tags": ["Task"],
        "summary": "Create new task",
        "responses": {
          "200": { "$ref": "#/components/responses/taskDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "requestBody": {
          "description": "Create a new task",
          "$ref": "#/components/requestBodies/taskDetails",
          "required": true
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["Task"],
        "summary": "Show task Details",
        "responses": {
          "200": { "$ref": "#/components/responses/taskDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to return",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ]
      },
      "patch": {
        "tags": ["Task"],
        "summary": "Edit Task Details",
        "responses": {
          "200": { "$ref": "#/components/responses/taskDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to return",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "description": "Create a new task",
          "$ref": "#/components/requestBodies/taskDetails",
          "required": true
        }
      },
      "delete": {
        "tags": ["Task"],
        "summary": "Delete Task Details",
        "responses": {
          "200": { "$ref": "#/components/responses/taskDetails" },
          "404": { "$ref": "#/components/responses/notFound" },
          "500": { "$ref": "#/components/responses/internalServerError" }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to delte",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ]
      }
    }
  },
  "components": {
    "responses": {
      "notFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 404 },
                "message": { "type": "string", "example": "failed" },
                "success": { "type": "boolean", "example": false }
              }
            }
          }
        }
      },
      "internalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 500 },
                "message": { "type": "string", "example": "failed" },
                "success": { "type": "boolean", "example": false }
              }
            }
          }
        }
      },
      "userList": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "success" },
                "success": { "type": "boolean", "example": true },
                "data": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      { "$ref": "#/components/schemas/user" },
                      { "$ref": "#/components/schemas/common" }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "userDetails": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "success" },
                "success": { "type": "boolean", "example": true },
                "data": {
                  "type": "object",
                  "allOf": [
                    { "$ref": "#/components/schemas/user" },
                    { "$ref": "#/components/schemas/common" }
                  ]
                }
              }
            }
          }
        }
      },
      "sprintList": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "success" },
                "success": { "type": "boolean", "example": true },
                "data": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      { "$ref": "#/components/schemas/sprint" },
                      { "$ref": "#/components/schemas/common" }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "sprintDetails": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "success" },
                "success": { "type": "boolean", "example": true },
                "data": {
                  "type": "object",
                  "allOf": [
                    { "$ref": "#/components/schemas/sprint" },
                    { "$ref": "#/components/schemas/common" }
                  ]
                }
              }
            }
          }
        }
      },
      "backlogList": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "success" },
                "success": { "type": "boolean", "example": true },
                "data": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      { "$ref": "#/components/schemas/backlog" },
                      { "$ref": "#/components/schemas/common" }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "backlogDetails": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "success" },
                "success": { "type": "boolean", "example": true },
                "data": {
                  "type": "object",
                  "allOf": [
                    { "$ref": "#/components/schemas/backlog" },
                    { "$ref": "#/components/schemas/common" }
                  ]
                }
              }
            }
          }
        }
      },
      "taskList": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "success" },
                "success": { "type": "boolean", "example": true },
                "data": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      { "$ref": "#/components/schemas/task" },
                      { "$ref": "#/components/schemas/common" }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "taskDetails": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": { "type": "integer", "example": 200 },
                "message": { "type": "string", "example": "success" },
                "success": { "type": "boolean", "example": true },
                "data": {
                  "type": "object",
                  "allOf": [
                    { "$ref": "#/components/schemas/task" },
                    { "$ref": "#/components/schemas/common" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "common": {
        "type": "object",
        "properties": {
          "id": { "type": "number", "example": 12345 },
          "created_at": {
            "type": "string",
            "example": "2024-08-21T19:13:08.440Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2024-08-21T19:13:08.440Z"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Karthikayan" },
          "nickname": { "type": "string", "example": "Karthi" },
          "email": { "type": "string", "example": "skarthikayan7@gmail.com" },
          "empid": { "type": "number", "example": 12345 },
          "status": { "type": "boolean", "example": true },
          "role": {
            "type": "string",
            "example": "USER",
            "enum": ["USER", "SCRUM_MASTER"]
          }
        }
      },
      "sprint": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Sprint name" },
          "start_date": {
            "type": "string",
            "example": "2024-08-21T19:13:08.440Z"
          },
          "end_date": {
            "type": "string",
            "example": "2024-08-21T19:13:08.440Z"
          },
          "status": { "type": "boolean", "example": true }
        }
      },
      "backlog": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Backlog Name" },
          "story_points": { "type": "number", "example": 1 },
          "status": {
            "type": "string",
            "example": true,
            "enum": ["NEW", "IN_PROGRESS", "COMPLETED"]
          },
          "sprint_id": { "type": "number", "example": 1 },
          "user_id": { "type": "number", "example": 1 }
        }
      },
      "task": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Task-Name" },
          "description": { "type": "string", "example": "Task Description" },
          "hours": { "type": "number", "example": 1 },
          "start_date": {
            "type": "string",
            "example": "2024-08-21T19:13:08.440Z"
          },
          "end_date": {
            "type": "string",
            "example": "2024-08-21T19:13:08.440Z"
          },
          "status": {
            "type": "string",
            "example": true,
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "IN_REVIEW",
              "DEPLOYED_TO_DEV",
              "MERGED_TO_MAIN_BRANCH",
              "DEPLOYED_TO_PROD"
            ]
          },
          "backlog_id": { "type": "number", "example": 1 },
          "user_id": { "type": "number", "example": 1 }
        }
      }
    },
    "requestBodies": {
      "userDetails": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/user" }
          }
        }
      },
      "sprintDetails": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/sprint" }
          }
        }
      },
      "backlogDetails": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/backlog" }
          }
        }
      },
      "taskDetails": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/task" }
          }
        }
      }
    }
  }
}
